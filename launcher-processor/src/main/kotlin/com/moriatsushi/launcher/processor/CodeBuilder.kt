package com.moriatsushi.launcher.processor

import org.intellij.lang.annotations.Language

internal class CodeBuilder {
    @Language("kotlin")
    fun buildDefaultEntry(functionName: String): String {
        return """
        // generated by jetpack compose launcher

        package com.moriatsushi.launcher

        import android.os.Bundle
        import androidx.activity.ComponentActivity
        import androidx.activity.compose.setContent

        class DefaultComposeActivity : ComponentActivity() {
            override fun onCreate(savedInstanceState: Bundle?) {
                super.onCreate(savedInstanceState)

                setContent {
                    $functionName()
                }
            }
        }
        """.trimIndent()
    }

    @Language("kotlin")
    fun buildOtherEntries(functionNames: List<String>): String {
        return """
        // generated by jetpack compose launcher

        package com.moriatsushi.launcher

        import android.os.Bundle
        import androidx.activity.ComponentActivity
        import androidx.activity.compose.setContent

        class ComposeActivity : ComponentActivity() {
            override fun onCreate(savedInstanceState: Bundle?) {
                super.onCreate(savedInstanceState)

                val destination = intent.getStringExtra("launcher_destination")

                setContent {
                    when (destination) {
                        ${buildDestinations(functionNames)}
                    }
                }
            }
        }
        """.trimIndent()
    }

    private fun buildDestinations(functionNames: List<String>): String {
        return functionNames.joinToString("\n") {
            "\"$it\" -> $it()"
        }
    }
}
